c
accept_header
c
accept_header
c
@params
c
request.body.read
request.body
c
@body.read
@body
c
params["lab1"]
params
c
request.env["HTTP_ACCEPT"].include? "xml"
request.env["HTTP_ACCEPT"].includes("xml")
request.env["HTTP_ACCEPT"]
request.env
h = request.env["HTTP_ACCEPT"]
c
accept_header
n
nn
c
request.env["HTTP_ACCEPT"]
headers["HTTP_ACCEPT"]
headers["Content-Type"]
headers = ActionDispatch::Http::Headers.new(request.env)
c
request.env.HTTP_ACCEPT
request.env[:HTTP_ACCEPT]
request.env
c
params.has_key?("cats")
params[:cats].present?
params.present?
params.key? cats
params
c
request.body.read
request.body
c
request.env
c
params
c
n
c
exception
n
c
request.env.select { |key, val| key.match("^HTTP.*")}
request.env.select { |key, val| k.match("^HTTP.*")}
request.env["HTTP_USER_AGENT"]
request.env["HTTP_HOST"]
request.env["HTTP_ACCEPT"]
request.env["HTTP_CONTENT"]
request.env["CONTENT_TYPE"]
request.env["HTTP_CONTENT_TYPE"]
c
request.headers["Http-Accept"]
request.headers["Content-Type"]
request.headers[:CONTENT_TYPE]
request.headers
c
request.env.SERVER_PROTOCOL
request.env
request.env[:SERVER_PROTOCOL]
request.headers
request
params
